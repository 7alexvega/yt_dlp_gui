name: Build pyinstaller bins

on:
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build_exe:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: install ffmpeg
        shell: powershell
        run: |
          Invoke-WebRequest -Uri "https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip" -OutFile "ffmpeg-release-essentials.zip"
          Expand-Archive "ffmpeg-release-essentials.zip"

      - name: build exe
        shell: powershell
        run: |
          pip install pip -U
          pip install -r requirements.txt
          
          $ffmpegDir = Get-ChildItem -Path "./ffmpeg-release-essentials" -Directory | Where-Object { $_.Name -match "ffmpeg-.*-essentials_build" }
          $ffmpegBinDir = Join-Path $ffmpegDir.FullName "bin"
          echo "ffmpeg bin dir: $ffmpegBinDir"
          
          pyinstaller --onefile `
          --add-binary "$ffmpegBinDir\ffmpeg.exe;," `
          --add-binary "$ffmpegBinDir\ffprobe.exe;," `
          --add-binary "$ffmpegBinDir\ffplay.exe;," `
          --windowed --name yt_dlp_gui main.py

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: yt_dlp_gui.exe
          path: .\dist\yt_dlp_gui.exe

  publish:
    runs-on: ubuntu-latest
    needs: build_exe
    permissions:
      contents: write
    env:
      VERSION: 1.0.1
      APP_NAME: yt_dlp_gui
      TMP_DIR: ${{ github.workspace }}/${{ env.APP_NAME }}_${{ env.VERSION }}/
    steps:
      - name: Create temp dir
        run: |
          mkdir -p ${{ env.TMP_DIR }}/${{ env.APP_NAME }}

      - name: Download exe
        uses: actions/download-artifact@v3
        with:
          name: yt_dlp_gui.exe
          path: ${{ env.TMP_DIR }}/${{ env.APP_NAME }}

      - name: Generate Prerelease Release Notes
        run: |
          zip -r ${{ env.APP_NAME }}_${{ env.VERSION }}.zip -j ${{ env.TMP_DIR }}. && rm ${{ env.TMP_DIR }}
          echo '### yt_dlp_gui `latest`' >> ReleaseNotes.md

      - name: Publish GitHub Release
        uses: ncipollo/release-action@v1
        with:
          bodyFile: "ReleaseNotes.md"
          artifacts: ${{ env.TMP_DIR }}.zip
          tag: "v${{ env.VERSION }}"
          token: ${{ secrets.GITHUB_TOKEN }}

